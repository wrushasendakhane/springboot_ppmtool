{"version":3,"sources":["utilities/userContext.jsx","components/layout/navBar.jsx","actions/projectActions.js","components/project/projectItem.jsx","components/project/createProjectButton.jsx","components/layout/dashboard.jsx","components/project/addProject.jsx","components/project/updateProject.jsx","components/project/projectBoard/projectTask.jsx","actions/backlogActions.js","components/project/projectBoard/backlog.jsx","components/project/projectBoard/projectBoard.jsx","components/project/projectBoard/addProjectTask.jsx","components/project/projectBoard/updateProjectTask.jsx","components/layout/landing.jsx","actions/securityActions.js","components/userManagement/register.jsx","utilities/security.js","components/userManagement/login.jsx","utilities/secureRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","NavBar","useContext","user","data","handleLogout","useState","headerContent","setHeaderContent","useEffect","console","log","className","id","to","fullName","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","getProjects","axios","get","PROJECT_API_URL","getProject","projectId","saveProject","project","post","ProjectItem","onDelete","style","paddingTop","projectIdentifier","projectName","description","cursor","CreateProjectButton","Dashboard","projects","setProjects","a","fetchData","handleDelete","delete","prevState","map","key","AddProject","history","start_date","end_date","setProject","errors","setErrors","onChange","e","newProject","target","name","value","handleSubmit","preventDefault","replace","response","onSubmit","classnames","_","isEmpty","autoFocus","placeholder","htmlFor","UpdateProject","match","params","ProjectTask","priorityString","priorityClass","projectTask","priority","projectSequence","summary","acceptanceCriteria","addProjectTask","updateProjectTask","patch","getBacklog","getProjectTask","deleteProjectTask","Backlog","backlog","setBacklog","todoItems","setTodoItems","inProgressItems","setInProgressItems","doneItems","setDoneItems","filter","task","forEach","status","errorOject","JSON","parse","message","projectNotFound","ProjectBoard","AddProjectTask","dueDate","setProjectTask","newProjectTask","UpdateProjectTask","pt_id","Landing","push","interceptors","use","res","err","Error","stringify","register","SECURITY_API_URL","login","loginRequest","Register","username","password","confimPassword","setUser","newUser","confirmPassword","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Login","handleLogin","setLoginRequest","newLoginRequest","setItem","jwt_decode","SecureRoute","Component","component","loggedIn","otherProps","render","props","jwtToken","decodedUser","currentTime","Date","now","exp","window","location","href","App","contextValue","Provider","role","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8e8db604.chunk.js","sourcesContent":["import { createContext } from \"react\";\nexport const UserContext = createContext(null);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { UserContext } from \"../../utilities/userContext\";\nfunction NavBar() {\n  const { data: user, handleLogout } = useContext(UserContext);\n  const [headerContent, setHeaderContent] = useState(null);\n  useEffect(() => {\n    console.log(\"NavBar\", user);\n    if (user) {\n      setHeaderContent(\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <NavLink className=\"nav-item nav-link\" to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n          </ul>\n          <Link className=\"nav-item nav-link\" to=\"/dashboard\">\n            <i className=\"fa fa-user-circle mr-1\" />\n            {user.fullName}\n          </Link>\n          <Link\n            className=\"nav-item nav-link\"\n            to=\"/login\"\n            onClick={handleLogout}\n          >\n            Logout\n          </Link>\n        </div>\n      );\n    } else {\n      setHeaderContent(\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <Link className=\"nav-item nav-link\" to=\"/login\">\n              Login\n            </Link>\n            <Link className=\"nav-item nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </ul>\n        </div>\n      );\n    }\n  }, [user]);\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link to=\"/landing\" className=\"navbar-brand\">\n          PPMTool\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        {headerContent}\n      </nav>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import axios from \"axios\";\n\nconst PROJECT_API_URL = \"/api/project\"\n\nexport function getProjects() {\n  return axios.get(PROJECT_API_URL + \"/all\")\n}\n\nexport function getProject(projectId) {\n  return axios.get(PROJECT_API_URL + `/${projectId}`);\n}\n\nexport function saveProject(project) {\n  return axios.post(PROJECT_API_URL, project);\n}\n\nexport function deleteProject(projectId) {\n  return axios.delete(PROJECT_API_URL + `/${projectId}`)\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectItem = ({ project, onDelete }) => {\n  return (\n    <div className=\"container\" style={{ paddingTop: \"10px\" }}>\n      <div className=\"card\">\n        <h5 className=\"card-header\">{project.projectIdentifier}</h5>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <h5 className=\"card-title text-left\">{project.projectName}</h5>\n              <p className=\"card-text text-left\">{project.description}</p>\n            </div>\n            <div className=\"col-3\">\n              <ul className=\"list-group\">\n                <Link\n                  className=\"list-group-item fa fa-edit pr-1\"\n                  to={`/projectBoard/${project.projectIdentifier}`}\n                >\n                  &nbsp; Project Board\n                </Link>\n                <Link\n                  className=\"list-group-item fa fa-flag-checkered pr-1\"\n                  to={`/updateProject/${project.projectIdentifier}`}\n                >\n                  &nbsp;Update Project\n                </Link>\n                <li\n                  className=\"list-group-item fa fa-minus-circle pr-1\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => onDelete(project.projectIdentifier)}\n                >\n                  &nbsp;Delete Project\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <Link to=\"/addProject\" className=\"btn btn-info btn-sm\">\n      Create Project\n    </Link>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { useState, useEffect } from \"react\";\nimport { getProjects, deleteProject } from \"../../actions/projectActions\";\nimport ProjectItem from \"../project/projectItem\";\nimport CreateProjectButton from \"../project/createProjectButton\";\nimport axios from \"axios\";\nfunction Dashboard() {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const { data } = await getProjects();\n      setProjects(data);\n    }\n    fetchData();\n  }, []);\n\n  const handleDelete = async (projectIdentifier) => {\n    try {\n      await deleteProject(projectIdentifier);\n      const { data } = await getProjects();\n      setProjects(data);\n    } catch (error) {\n      setProjects((prevState) => {\n        return prevState;\n      });\n    }\n  };\n  return (\n    <div>\n      <h1 className=\"text-center\">Projects</h1>\n      <div className=\"text-left\">\n        <CreateProjectButton />\n      </div>\n      <div style={{ paddingTop: \"10px\" }}>\n        {projects.map((project) => (\n          <ProjectItem\n            key={project.id}\n            project={project}\n            onDelete={handleDelete}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport { saveProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\nimport _ from \"lodash\";\n\nfunction AddProject({ history }) {\n  const [project, setProject] = useState({\n    id: 0,\n    projectName: \"\",\n    projectIdentifier: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const onChange = (e) => {\n    const newProject = {\n      ...project,\n      [e.target.name]: e.target.value,\n    };\n    setProject(newProject);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await saveProject(project);\n      history.replace(\"/dashboard\");\n    } catch (error) {\n      setErrors({ ...error.response.data });\n    }\n  };\n  return (\n    <div>\n      <h1 className=\"text-center\">Create Project Form</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <input\n            type=\"text\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.projectName,\n              \"is-valid\": !_.isEmpty(errors) && !errors.projectName,\n            })}\n            name=\"projectName\"\n            value={project.projectName}\n            autoFocus={true}\n            placeholder=\"Project Name\"\n            onChange={onChange}\n          />\n          {errors.projectName && (\n            <div className=\"invalid-feedback\">{errors.projectName}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <input\n            type=\"text\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.projectIdentifier,\n              \"is-valid\": !_.isEmpty(errors) && !errors.projectIdentifier,\n            })}\n            name=\"projectIdentifier\"\n            value={project.projectIdentifier}\n            placeholder=\"Project Identifier\"\n            onChange={onChange}\n          />\n          {errors.projectIdentifier && (\n            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <textarea\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.description,\n              \"is-valid\": !_.isEmpty(errors) && !errors.description,\n            })}\n            name=\"description\"\n            value={project.description}\n            placeholder=\"Description\"\n            onChange={onChange}\n          />\n          {errors.description && (\n            <div className=\"invalid-feedback\">{errors.description}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"start_date\" className=\"col-sm-2 col-form-label\">\n            Start Date\n          </label>\n          <div className=\"col-sm-10\">\n            <input\n              type=\"date\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": errors.start_date,\n                \"is-valid\": !_.isEmpty(errors) && !errors.start_date,\n              })}\n              name=\"start_date\"\n              value={project.start_date}\n              onChange={onChange}\n            />\n          </div>\n          {errors.start_date && (\n            <div className=\"invalid-feedback\">{errors.start_date}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"end_date\" className=\"col-sm-2 col-form-label\">\n            End Date\n          </label>\n          <div className=\"col-sm-10\">\n            <input\n              type=\"date\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": errors.end_date,\n                \"is-valid\": !_.isEmpty(errors) && !errors.end_date,\n              })}\n              name=\"end_date\"\n              value={project.end_date}\n              onChange={onChange}\n            />\n          </div>\n          {errors.end_date && (\n            <div className=\"invalid-feedback\">{errors.end_date}</div>\n          )}\n        </div>\n        <button className=\"btn btn-primary btn-lg\" type=\"submit\">\n          Add Project\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddProject;\n","import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport classnames from \"classnames\";\nimport { saveProject, getProject } from \"../../actions/projectActions\";\n\nfunction UpdateProject({ match, history }) {\n  const [project, setProject] = useState({\n    id: \"\",\n    projectName: \"\",\n    projectIdentifier: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const { data } = await getProject(match.params.id);\n        setProject(data);\n      } catch (error) {\n        setErrors({ ...error.response.data });\n      }\n    }\n    fetchData();\n  }, []);\n\n  const onChange = (e) => {\n    const newProject = {\n      ...project,\n      [e.target.name]: e.target.value,\n    };\n    setProject(newProject);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await saveProject(project);\n      history.replace(\"/dashboard\");\n    } catch (error) {\n      setErrors({ ...error.response.data });\n    }\n  };\n  return (\n    <div>\n      <h1 className=\"text-center\">Update Project Form</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <input\n            type=\"text\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.projectName,\n              \"is-valid\": !_.isEmpty(errors) && !errors.projectName,\n            })}\n            name=\"projectName\"\n            value={project.projectName}\n            autoFocus={true}\n            placeholder=\"Project Name\"\n            onChange={onChange}\n          />\n          {errors.projectName && (\n            <div className=\"invalid-feedback\">{errors.projectName}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <input\n            type=\"text\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.projectIdentifier,\n              \"is-valid\": !_.isEmpty(errors) && !errors.projectIdentifier,\n            })}\n            name=\"projectIdentifier\"\n            value={project.projectIdentifier}\n            placeholder=\"Project Identifier\"\n            onChange={onChange}\n          />\n          {errors.projectIdentifier && (\n            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <textarea\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.description,\n              \"is-valid\": !_.isEmpty(errors) && !errors.description,\n            })}\n            name=\"description\"\n            value={project.description}\n            placeholder=\"Description\"\n            onChange={onChange}\n          />\n          {errors.description && (\n            <div className=\"invalid-feedback\">{errors.description}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"start_date\" className=\"col-sm-2 col-form-label\">\n            Start Date\n          </label>\n          <div className=\"col-sm-10\">\n            <input\n              type=\"date\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": errors.start_date,\n                \"is-valid\": !_.isEmpty(errors) && !errors.start_date,\n              })}\n              name=\"start_date\"\n              value={project.start_date || \"\"}\n              onChange={onChange}\n            />\n          </div>\n          {errors.start_date && (\n            <div className=\"invalid-feedback\">{errors.start_date}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"end_date\" className=\"col-sm-2 col-form-label\">\n            End Date\n          </label>\n          <div className=\"col-sm-10\">\n            <input\n              type=\"date\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": errors.end_date,\n                \"is-valid\": !_.isEmpty(errors) && !errors.end_date,\n              })}\n              name=\"end_date\"\n              value={project.end_date || \"\"}\n              onChange={onChange}\n            />\n          </div>\n          {errors.end_date && (\n            <div className=\"invalid-feedback\">{errors.end_date}</div>\n          )}\n        </div>\n        <button className=\"btn btn-primary btn-lg\" type=\"submit\">\n          Update Project\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default UpdateProject;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProjectTask({ projectTask, onDelete }) {\n  let priorityString;\n  let priorityClass;\n\n  if (projectTask.priority === 1) {\n    priorityString = \"HIGH\";\n    priorityClass = \"bg-danger\";\n  } else if (projectTask.priority === 2) {\n    priorityString = \"MEDIUM\";\n    priorityClass = \"bg-warning\";\n  } else if (projectTask.priority === 3) {\n    priorityString = \"LOW\";\n    priorityClass = \"bg-info\";\n  }\n\n  return (\n    <div className=\"card bg-light m-2\">\n      <div className={`card-header ${priorityClass}`}>\n        ID: {projectTask.projectSequence} Priority: {priorityString}\n      </div>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{projectTask.summary}</h5>\n        <p className=\"card-text\">{projectTask.acceptanceCriteria}</p>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <Link\n              to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\n              className=\"btn btn-primary btn-sm\"\n            >\n              View/Update\n            </Link>\n          </div>\n          <div className=\"col-6\">\n            <button\n              className=\"btn btn-danger btn-sm\"\n              onClick={() => onDelete(projectTask.projectSequence)}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectTask;\n","import axios from \"axios\"\n\nconst BACKLOG_API_URL = \"/api/backlog/\"\n\nexport function addProjectTask(projectTask) {\n  return axios.post(BACKLOG_API_URL + `${projectTask.projectIdentifier}`, projectTask);\n}\n\nexport function updateProjectTask(projectTask) {\n  return axios.patch(BACKLOG_API_URL + `${projectTask.projectIdentifier}/${projectTask.projectSequence}`, projectTask);\n}\n\nexport function getBacklog(projectIdentifier) {\n  return axios.get(BACKLOG_API_URL + `${projectIdentifier}`);\n}\n\nexport function getProjectTask(projectIdentifier, projectSequence) {\n  return axios.get(BACKLOG_API_URL + `${projectIdentifier}/${projectSequence}`);\n}\n\nexport function deleteProjectTask(projectIdentifier, projectSequence) {\n  return axios.delete(BACKLOG_API_URL + `${projectIdentifier}/${projectSequence}`);\n}","import React, { useEffect, useState } from \"react\";\nimport ProjectTask from \"./projectTask\";\nimport { getBacklog, deleteProjectTask } from \"../../../actions/backlogActions\";\n\nfunction Backlog({ projectIdentifier }) {\n  const [backlog, setBacklog] = useState([]);\n\n  const [todoItems, setTodoItems] = useState([]);\n  const [inProgressItems, setInProgressItems] = useState([]);\n  const [doneItems, setDoneItems] = useState([]);\n\n  const [errors, setErrors] = useState({});\n\n  const handleDelete = async (projectSequence) => {\n    try {\n      await deleteProjectTask(projectIdentifier, projectSequence);\n\n      setTodoItems([]);\n      setInProgressItems([]);\n      setDoneItems([]);\n      setBacklog((prevState) => {\n        return prevState.filter(\n          (task) => task.projectSequence !== projectSequence\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Backlog dependency useEffect getting called\");\n    backlog.forEach((task) => {\n      if (task.status === \"TO_DO\") {\n        setTodoItems((prevState) => [\n          ...prevState,\n          <ProjectTask\n            key={task.id}\n            projectTask={task}\n            onDelete={handleDelete}\n          />,\n        ]);\n      } else if (task.status === \"IN_PROGRESS\") {\n        setInProgressItems((prevState) => [\n          ...prevState,\n          <ProjectTask\n            key={task.id}\n            projectTask={task}\n            onDelete={handleDelete}\n          />,\n        ]);\n      } else if (task.status === \"DONE\") {\n        setDoneItems((prevState) => [\n          ...prevState,\n          <ProjectTask\n            key={task.id}\n            projectTask={task}\n            onDelete={handleDelete}\n          />,\n        ]);\n      }\n    });\n  }, [backlog]);\n\n  useEffect(() => {\n    console.log(\"Initial useEffect hook getting called\");\n    async function fetchData() {\n      try {\n        const { data } = await getBacklog(projectIdentifier);\n        setBacklog((prevState) => [...prevState, ...data]);\n      } catch (error) {\n        if (!error.response) {\n          let errorOject = JSON.parse(error.message);\n          if (errorOject.projectNotFound) {\n            setErrors(errorOject);\n          }\n        } else {\n          setErrors(error.response.data);\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {errors && errors.projectNotFound ? (\n        <div className=\"alert alert-danger text-center\">\n          {errors.projectNotFound}\n        </div>\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card bg-light\">\n              <div className=\"card-header text-center\">TO DO</div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card bg-primary\">\n              <div className=\"card-header text-center\">IN PROGRESS</div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card bg-success\">\n              <div className=\"card-header text-center\">DONE</div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Backlog;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./backlog\";\n\nfunction ProjectBoard({ match }) {\n  const projectIdentifier = match.params.id;\n\n  return (\n    <div className=\"container\">\n      <Link\n        to={`/addProjectTask/${projectIdentifier}`}\n        className=\"btn btn-primary mt-2 fa fa-plus-circle pr-1\"\n      >\n        &nbsp;Create Project Task\n      </Link>\n      <br />\n      <hr />\n      <Backlog projectIdentifier={projectIdentifier} />\n    </div>\n  );\n}\n\nexport default ProjectBoard;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\nimport _ from \"lodash\";\n\nfunction AddProjectTask({ match, history }) {\n  const projectIdentifier = match.params.id;\n\n  const [projectTask, setProjectTask] = useState({\n    summary: \"\",\n    acceptanceCriteria: \"\",\n    dueDate: \"\",\n    priority: 0,\n    status: \"\",\n    projectIdentifier: projectIdentifier,\n  });\n\n  const [errors, setErrors] = useState([]);\n\n  const onChange = (e) => {\n    const newProjectTask = {\n      ...projectTask,\n      [e.target.name]: e.target.value,\n    };\n    setProjectTask(newProjectTask);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await addProjectTask(projectTask);\n      history.replace(`/projectBoard/${projectIdentifier}`);\n    } catch (error) {\n      setErrors({ ...error.response.data });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Link\n        to={`/projectBoard/${projectIdentifier}`}\n        className=\"btn btn-secondary btn-sm mt-2\"\n      >\n        Back to Project Board\n      </Link>\n      <h2 className=\"text-center\">Add Project Task</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <input\n            type=\"text\"\n            name=\"summary\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.summary,\n              \"is-valid\": !_.isEmpty(errors) && !errors.summary,\n            })}\n            placeholder=\"Project Task Summary\"\n            value={projectTask.summary}\n            onChange={onChange}\n          />\n          {errors.summary && (\n            <div className=\"invalid-feedback\">{errors.summary}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <textarea\n            name=\"acceptanceCriteria\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.acceptanceCriteria,\n              \"is-valid\": !_.isEmpty(errors) && !errors.acceptanceCriteria,\n            })}\n            placeholder=\"Acceptance Criteria\"\n            value={projectTask.acceptanceCriteria}\n            onChange={onChange}\n          />\n          {errors.acceptanceCriteria && (\n            <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"dueDate\" className=\"col-md-2 col-form-label\">\n            Due Date\n          </label>\n          <div className=\"col-md-10\">\n            <input\n              type=\"date\"\n              name=\"dueDate\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": errors.dueDate,\n                \"is-valid\": !_.isEmpty(errors) && !errors.dueDate,\n              })}\n              value={projectTask.dueDate}\n              onChange={onChange}\n            />\n            {errors.dueDate && (\n              <div className=\"invalid-feedback\">{errors.dueDate}</div>\n            )}\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <select\n            name=\"priority\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.priority,\n              \"is-valid\": !_.isEmpty(errors) && !errors.priority,\n            })}\n            value={projectTask.priority}\n            onChange={onChange}\n          >\n            <option value={0}>Select Priority</option>\n            <option value={3}>LOW</option>\n            <option value={2}>MEDIUM</option>\n            <option value={1}>HIGH</option>\n          </select>\n          {errors.priority && (\n            <div className=\"invalid-feedback\">{errors.priority}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <select\n            name=\"status\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.status,\n              \"is-valid\": !_.isEmpty(errors) && !errors.status,\n            })}\n            value={projectTask.status}\n            onChange={onChange}\n          >\n            <option value=\"\">Select Status</option>\n            <option value=\"TO_DO\">TO DO</option>\n            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n            <option value=\"DONE\">DONE</option>\n          </select>\n          {errors.status && (\n            <div className=\"invalid-feedback\">{errors.status}</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary btn-block\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddProjectTask;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  updateProjectTask,\n  getProjectTask,\n} from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\nimport _ from \"lodash\";\nimport {} from \"react\";\n\nfunction UpdateProjectTask({ match, history }) {\n  const projectIdentifier = match.params.id;\n  const projectSequence = match.params.pt_id;\n\n  const [projectTask, setProjectTask] = useState({\n    summary: \"\",\n    acceptanceCriteria: \"\",\n    dueDate: \"\",\n    priority: 0,\n    status: \"\",\n    projectIdentifier: projectIdentifier,\n    projectSequence: projectSequence,\n  });\n\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getProjectTask(\n          projectIdentifier,\n          projectSequence\n        );\n        setProjectTask(data);\n      } catch (error) {\n        if (!error.response) {\n          let errorOject = JSON.parse(error.message);\n          if (errorOject.projectNotFound) {\n            console.log();\n            history.replace(`/projectBoard/${projectIdentifier}`);\n          }\n        } else {\n          setErrors(error.response.data);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n\n  const onChange = (e) => {\n    const newProjectTask = {\n      ...projectTask,\n      [e.target.name]: e.target.value,\n    };\n    setProjectTask(newProjectTask);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await updateProjectTask(projectTask);\n      history.replace(`/projectBoard/${projectIdentifier}`);\n    } catch (error) {\n      if (!error.response) {\n        let errorOject = JSON.parse(error.message);\n        if (errorOject.projectNotFound) {\n          history.replace(`/projectBoard/${projectIdentifier}`);\n        }\n      } else {\n        setErrors(error.response.data);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Link\n        to={`/projectBoard/${projectIdentifier}`}\n        className=\"btn btn-secondary btn-sm mt-2\"\n      >\n        Back to Project Board\n      </Link>\n      <h2 className=\"text-center\">Update Project Task</h2>\n      <p className=\"text-center\">\n        Project Name: {projectIdentifier} | Project ID: {projectSequence}\n      </p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <input\n            type=\"text\"\n            name=\"summary\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.summary,\n              \"is-valid\": !_.isEmpty(errors) && !errors.summary,\n            })}\n            placeholder=\"Project Task Summary\"\n            value={projectTask.summary}\n            onChange={onChange}\n          />\n          {errors.summary && (\n            <div className=\"invalid-feedback\">{errors.summary}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <textarea\n            name=\"acceptanceCriteria\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.acceptanceCriteria,\n              \"is-valid\": !_.isEmpty(errors) && !errors.acceptanceCriteria,\n            })}\n            placeholder=\"Acceptance Criteria\"\n            value={projectTask.acceptanceCriteria}\n            onChange={onChange}\n          />\n          {errors.acceptanceCriteria && (\n            <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"dueDate\" className=\"col-md-2 col-form-label\">\n            Due Date\n          </label>\n          <div className=\"col-md-10\">\n            <input\n              type=\"date\"\n              name=\"dueDate\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": errors.dueDate,\n                \"is-valid\": !_.isEmpty(errors) && !errors.dueDate,\n              })}\n              value={projectTask.dueDate || \"\"}\n              onChange={onChange}\n            />\n            {errors.dueDate && (\n              <div className=\"invalid-feedback\">{errors.dueDate}</div>\n            )}\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <select\n            name=\"priority\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.priority,\n              \"is-valid\": !_.isEmpty(errors) && !errors.priority,\n            })}\n            value={projectTask.priority}\n            onChange={onChange}\n          >\n            <option value={0}>Select Priority</option>\n            <option value={3}>LOW</option>\n            <option value={2}>MEDIUM</option>\n            <option value={1}>HIGH</option>\n          </select>\n          {errors.priority && (\n            <div className=\"invalid-feedback\">{errors.priority}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <select\n            name=\"status\"\n            className={classnames(\"form-control\", {\n              \"is-invalid\": errors.status,\n              \"is-valid\": !_.isEmpty(errors) && !errors.status,\n            })}\n            value={projectTask.status}\n            onChange={onChange}\n          >\n            <option value=\"\">Select Status</option>\n            <option value=\"TO_DO\">TO DO</option>\n            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n            <option value=\"DONE\">DONE</option>\n          </select>\n          {errors.status && (\n            <div className=\"invalid-feedback\">{errors.status}</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary btn-block\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default UpdateProjectTask;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../utilities/userContext\";\nfunction Landing({ history }) {\n  const { data: user } = useContext(UserContext);\n  useEffect(() => {\n    if (user) {\n      history.push(\"/dashboard\");\n    }\n  });\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Personal Project Management Tool</h1>\n      <h4 className=\"text-center\">\n        Create your account to join active projects or start your own\n      </h4>\n      <hr />\n      <p className=\"text-center\">\n        <Link className=\"btn btn-primary btn-lg mb-2\" to=\"/register\">\n          Sign Up\n        </Link>\n        &nbsp;\n        <Link className=\"btn btn-secondary btn-lg mb-2\" to=\"/login\">\n          Login\n        </Link>\n      </p>\n    </div>\n  );\n}\n\nexport default Landing;\n","import axios from \"axios\"\naxios.interceptors.response.use(\n  res => res,\n  err => {\n    if (err.response.status >= 400) {\n      console.log(err.response)\n      throw new Error(JSON.stringify(err.response.data));\n    }\n    throw err;\n  }\n);\nconst SECURITY_API_URL = \"/api/users\"\n\nexport function register(user) {\n  return axios.post(SECURITY_API_URL + \"/register\", user);\n}\n\nexport function login(loginRequest) {\n  return axios.post(SECURITY_API_URL + \"/login\", loginRequest);\n}","import React, { useState, useContext, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport _ from \"lodash\";\nimport { register } from \"../../actions/securityActions\";\nimport { UserContext } from \"../../utilities/userContext\";\n\nfunction Register({ history }) {\n  const { data } = useContext(UserContext);\n  const [user, setUser] = useState({\n    username: \"\",\n    fullName: \"\",\n    password: \"\",\n    confimPassword: \"\",\n  });\n\n  if (data) {\n    history.push(\"/dashboard\");\n  }\n\n  const [errors, setErrors] = useState({});\n\n  const onChange = (e) => {\n    const newUser = {\n      ...user,\n      [e.target.name]: e.target.value,\n    };\n    setUser(newUser);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await register(user);\n      history.replace(\"/login\");\n    } catch (error) {\n      if (!error.response) {\n        let errorOject = JSON.parse(error.message);\n        setErrors(errorOject);\n      } else {\n        setErrors(error.response.data);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Sign Up</h1>\n      <h5 className=\"text-center\">Create you Account</h5>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <input\n            className={classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.fullName,\n              \"is-valid\": !_.isEmpty(errors) && !errors.fullName,\n            })}\n            type=\"text\"\n            name=\"fullName\"\n            placeholder=\"Full Name\"\n            onChange={onChange}\n          ></input>\n          {errors.fullName && (\n            <div className=\"invalid-feedback\">{errors.fullName}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <input\n            className={classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.username,\n              \"is-valid\": !_.isEmpty(errors) && !errors.username,\n            })}\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Email Address (Username)\"\n            onChange={onChange}\n          ></input>\n          {errors.username && (\n            <div className=\"invalid-feedback\">{errors.username}</div>\n          )}\n        </div>\n\n        <div className=\"form-group row\">\n          <input\n            className={classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.password,\n              \"is-valid\": !_.isEmpty(errors) && !errors.password,\n            })}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={onChange}\n          ></input>\n          {errors.password && (\n            <div className=\"invalid-feedback\">{errors.password}</div>\n          )}\n        </div>\n\n        <div className=\"form-group row\">\n          <input\n            className={classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.confirmPassword,\n              \"is-valid\": !_.isEmpty(errors) && !errors.confirmPassword,\n            })}\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            onChange={onChange}\n          ></input>\n          {errors.confirmPassword && (\n            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <button className=\"btn btn-info btn-lg btn-block\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","import axios from 'axios';\n\nexport const setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport const logout = async () => {\n  localStorage.removeItem(\"jwtToken\")\n  setJWTToken();\n}","import React, { useState, useContext, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport _ from \"lodash\";\nimport { login } from \"../../actions/securityActions\";\nimport { setJWTToken } from \"../../utilities/security\";\nimport jwt_decode from \"jwt-decode\";\nimport { UserContext } from \"../../utilities/userContext\";\n\nfunction Login({ history }) {\n  const { data: user, handleLogin } = useContext(UserContext);\n  const [loginRequest, setLoginRequest] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  if (user) {\n    history.push(\"/dashboard\");\n  }\n\n  const [errors, setErrors] = useState({});\n\n  const onChange = (e) => {\n    const newLoginRequest = {\n      ...loginRequest,\n      [e.target.name]: e.target.value,\n    };\n    setLoginRequest(newLoginRequest);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await login(loginRequest);\n      localStorage.setItem(\"jwtToken\", data.token);\n      setJWTToken(data.token);\n      const user = jwt_decode(data.token);\n      handleLogin(user);\n      history.replace(\"/dashboard\");\n    } catch (error) {\n      if (!error.response) {\n        let errorOject = JSON.parse(error.message);\n        setErrors(errorOject);\n      } else {\n        setErrors(error.response.data);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <input\n            className={classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.username,\n              \"is-valid\": !_.isEmpty(errors) && !errors.username,\n            })}\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Email Address\"\n            value={loginRequest.username}\n            onChange={onChange}\n          ></input>\n          {errors.username && (\n            <div className=\"invalid-feedback\">{errors.username}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <input\n            className={classnames(\"form-control form-control-lg\", {\n              \"is-invalid\": errors.password,\n              \"is-valid\": !_.isEmpty(errors) && !errors.password,\n            })}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={loginRequest.password}\n            onChange={onChange}\n          ></input>\n          {errors.password && (\n            <div className=\"invalid-feedback\">{errors.password}</div>\n          )}\n        </div>\n        <div className=\"form-group row\">\n          <button className=\"btn btn-info btn-lg btn-block\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"./userContext\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst SecureRoute = ({ component: Component, loggedIn, ...otherProps }) => {\n  console.log(loggedIn);\n  return (\n    <Route\n      {...otherProps}\n      render={(props) =>\n        loggedIn ? (\n          <Component {...otherProps} {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n\n  // <Route\n  //   {...otherProps}\n  //   render={(props) =>\n  //     loggedIn ? (\n  //       <Redirect to=\"login\" />\n  //     ) : (\n  //       // <Component {...otherProps} {...props} />\n  //       <Redirect to=\"login\" />\n  //     )\n  //   }\n  // />\n};\n\nexport default SecureRoute;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Route, Switch } from \"react-router-dom\"\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"font-awesome/css/font-awesome.css\"\nimport NavBar from './components/layout/navBar';\nimport Dashboard from './components/layout/dashboard';\nimport AddProject from './components/project/addProject';\nimport UpdateProject from './components/project/updateProject';\nimport ProjectBoard from './components/project/projectBoard/projectBoard';\nimport AddProjectTask from './components/project/projectBoard/addProjectTask';\nimport UpdateProjectTask from './components/project/projectBoard/updateProjectTask';\nimport Landing from './components/layout/landing';\nimport Register from './components/userManagement/register';\nimport Login from './components/userManagement/login';\nimport { UserContext } from './utilities/userContext';\n\nimport { setJWTToken, logout } from \"./utilities/security\";\nimport jwt_decode from 'jwt-decode';\nimport SecureRoute from './utilities/secureRoute';\n\nconst jwtToken = localStorage.jwtToken;\nvar decodedUser = null;\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  decodedUser = jwt_decode(jwtToken);\n  const currentTime = Date.now() / 1000;\n  if (decodedUser.exp < currentTime) {\n    logout();\n    window.location.href = \"/\";\n  }\n}\n\nfunction App(props) {\n  const [user, setUser] = useState(decodedUser);\n\n  const onLogin = (user) => {\n    setUser(user);\n  }\n\n  const onLogout = () => {\n    logout()\n    setUser(null);\n  }\n\n  const contextValue = {\n    data: user,\n    handleLogin: onLogin,\n    handleLogout: onLogout\n  };\n\n\n\n  return (\n    <Fragment>\n      <UserContext.Provider value={contextValue}>\n        <NavBar />\n        <main role=\"main\" className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={(props) => <Register {...props} />} />\n            <Route path=\"/login\" component={(props) => <Login {...props} />} />\n            <SecureRoute loggedIn={user != null} path=\"/dashboard\" component={Dashboard} />\n            <SecureRoute loggedIn={user != null} path=\"/addProject\" component={(props) => <AddProject {...props} />} />\n            <SecureRoute loggedIn={user != null} path=\"/updateProject/:id\" component={(props) => <UpdateProject {...props} />} />\n            <SecureRoute loggedIn={user != null} path=\"/projectBoard/:id\" component={(props) => <ProjectBoard {...props} />} />\n            <SecureRoute loggedIn={user != null} path=\"/addProjectTask/:id\" component={(props) => <AddProjectTask {...props} />} />\n            <SecureRoute loggedIn={user != null} path=\"/updateProjectTask/:id/:pt_id\" component={(props) => <UpdateProjectTask {...props} />} />\n            {/* <Route path=\"/dashboard\" component={(props) => <Dashboard {...props} />} />\n            <Route path=\"/addProject\" component={(props) => <AddProject {...props} />} />\n            <Route path=\"/updateProject/:id\" component={(props) => <UpdateProject {...props} />} />\n            <Route path=\"/projectBoard/:id\" component={(props) => <ProjectBoard {...props} />} />\n            <Route path=\"/addProjectTask/:id\" component={(props) => <AddProjectTask {...props} />} />\n            <Route path=\"/updateProjectTask/:id/:pt_id\" component={(props) => <UpdateProjectTask {...props} />} /> */} */}\n\n            <Route path=\"/\" component={(props) => <Landing {...props} />} />\n          </Switch>\n        </main>\n      </UserContext.Provider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}